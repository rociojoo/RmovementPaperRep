count_p_use <- as.numeric(table(data_line))
return(count_p_use)
}))
use_counts<-data.frame(use_counts)
colnames(use_counts) <- categories
rownames(use_counts) <- t(packages_new)
total_package <- rowSums(use_counts)
use_counts$package<-row.names(use_counts)
use_counts <- use_counts[total_package > 0,]
df1<-melt(use_counts[, -5],id.vars='package',variable_name='response')
g<-unlist(by(df1, df1$package, function(x) sum(x$value)))
color.pallete<-brewer.pal(5,'YlGnBu')
color.pallete[1]<-'lightgray'
df1$package<-factor(df1$package,levels=names(sort(g,decreasing=F)))
df1$response<-factor(df1$response,levels=rev(c('Essential','Important','Slightly relevant','Not relevant')))
data_question <- data_all[,grep("q3", colnames(data_all))]
colnames(data_question) <- t(packages)
# I'm dropping trajr that was added in the end and only got 1 response
data_question <- data_question[,-grep("trajr",colnames(data_question))]
packages_new <- packages[-which(packages=="trajr"),]
categories <- c("Not relevant","Slightly relevant","Important","Essential")
use_counts <- t(sapply(1:ncol(data_question),function(x){
data_line <- factor(data_question[,x],levels=categories)
count_p_use <- as.numeric(table(data_line))
return(count_p_use)
}))
use_counts<-data.frame(use_counts)
colnames(use_counts) <- categories
rownames(use_counts) <- t(packages_new)
total_package <- rowSums(use_counts)
use_counts$package<-row.names(use_counts)
use_counts <- use_counts[total_package > 0,]
df1<-melt(use_counts[, ],id.vars='package',variable_name='response')
g<-unlist(by(df1, df1$package, function(x) sum(x$value)))
color.pallete<-brewer.pal(5,'YlGnBu')
color.pallete[1]<-'lightgray'
df1$package<-factor(df1$package,levels=names(sort(g,decreasing=F)))
df1$response<-factor(df1$response,levels=rev(c('Essential','Important','Slightly relevant','Not relevant')))
ggplot(data=df1) + geom_col(aes(x=package, y=value,fill=response)) +
ylab('count') +coord_flip() +
scale_fill_manual(values=color.pallete) +theme_classic() +
theme(axis.text.y = element_text( hjust = 1,vjust=0.5),
axis.title =element_text(size=24),
axis.text =element_text(size=16),
legend.text=element_text(size=16),
legend.title=element_blank())
package_levels<-row.names(use_per[order(use_per$good_excellent,use_per$Essential, use_per$Important),])
use_per2<-use_per
use_per2[is.na(use_per2)]<-0
use_per2$package<-row.names(use_per2)
use_per2<-subset(use_per2,counts>5)
package_levels<-row.names(use_per[order(use_per$good_excellent,use_per$Essential, use_per$Important),])
View(use_per)
df2<-use_counts[,c("Not relevant","Slightly relevant","Important","Essential")]
use_per<-df2/apply(df2,1,sum)*100
use_per$good_excellent<-signif(apply(use_per[,c('Important','Essential')],1,sum),4)
use_per$counts<-apply(df2[,c('Important','Essential')],1,sum)
package_levels<-row.names(use_per[order(use_per$good_excellent,use_per$Essential, use_per$Important),])
use_per2<-use_per
use_per2[is.na(use_per2)]<-0
use_per2$package<-row.names(use_per2)
use_per2<-subset(use_per2,counts>5)
df1<-melt(subset(use_per2,select=-c(good_excellent,counts)),id.vars='package',variable_name='response')
df1$package<-factor(df1$package, levels=package_levels)
df1$response<-factor(df1$response,levels=c("Not relevant","Slightly relevant","Important","Essential"))
color.pallete<-brewer.pal(4,'YlGnBu')
color.pallete[1:2]<-c('lightgray','darkgray')
#color.pallete[1]<-c('lightgray')
ggplot(data=df1) + geom_col(aes(x=package, y=value,fill=response)) +
ylab('percentage') +coord_flip() +
scale_fill_manual(values=color.pallete) +theme_classic() +
theme(axis.text.y = element_text( hjust = 1,vjust=0.5),
axis.title =element_text(size=24),
axis.text =element_text(size=15),
legend.text=element_text(size=16),
legend.title=element_blank())
data_question <- data_all[,grep("q1", colnames(data_all))]
colnames(data_question) <- t(packages)
# I'm dropping trajr that was added in the end and only got 1 response
data_question <- data_question[,-grep("trajr",colnames(data_question))]
packages_new <- packages[-which(packages=="trajr"),]
categories <- c("Never","Rarely","Sometimes","Often")
use_counts <- t(sapply(1:ncol(data_question),function(x){
data_line <- factor(data_question[,x],levels=categories)
count_p_use <- as.numeric(table(data_line))
return(count_p_use)
}))
use_counts<-data.frame(use_counts)
colnames(use_counts) <- categories
rownames(use_counts) <- t(packages_new)
use_counts$Package<-row.names(use_counts)
use_counts <- use_counts %>%
mutate(users = Rarely + Sometimes + Often)
funciones <- read.csv(paste0(path_data,"RmovementPackagesMetadata-20180904.csv"))
matrix_fun <- left_join(use_counts,funciones)
matrix_fun <- matrix_fun[(!is.na(matrix_fun$monthly.downloads)),]
ggplot(matrix_fun,aes(x=users, y=monthly.downloads)) +
geom_point(size=5) +
xlab('Number of users') + ylab("Monthly downloads") +
geom_text_repel(label=matrix_fun$Package,  segment.size=0.6,force=3,segment.alpha=.5,hjust=0,box.padding=0.5,min.segment.length=.1,size=6, direction = "both") +
scale_x_continuous(trans='log10')+
scale_y_continuous(trans='log10') +theme_classic() +
theme(axis.text.y = element_text( hjust = 1,vjust=0.5),
axis.title =element_text(size=24),
axis.text =element_text(size=15))
website<-'http://example.com/'
plot(mtcars)
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("SwimR", version = "3.8")
package<-'SwimR'
#readLines('file:///C:/Users/birde/Documents/R/win-library/3.4/adehabitatHR/NAMESPACE')
d<-readLines(paste0('/home/matt/R/x86_64-pc-linux-gnu-library/3.5/',package,'/NAMESPACE'))
f<-strsplit(d[grepl('export\\(',d)],',')
knitr::opts_chunk$set(echo = TRUE,fig.width=16, fig.height=10)
library(tidyverse)
library(ggplot2)
library(ggrepel)
setwd('/home/matt/Dropbox/mablab/Rocio/MovementReview')
matrix_all <- read.csv("Survey_Processed.csv")
names(matrix_all) <- c("package",names(matrix_all)[2:ncol(matrix_all)])
funciones <- read.csv("packages_newlist_20180830_help.csv")
matrix_fun <- left_join(matrix_all,funciones)
matrix_fun <- matrix_fun[!is.na(matrix_fun$Number_Functions),]
matrix_fun$documentation <- c("Manual")
matrix_fun$documentation[matrix_fun$Vignettes == "Yes" & matrix_fun$Others == "No"] <- c("Manual+Vignette")
matrix_fun$documentation[matrix_fun$Vignettes == "Yes" & matrix_fun$Others == "Yes"] <- c("Manual+Vignette+Extra")
# discarding the packages we did not get users from:
matrix_fun_2 <- matrix_fun[matrix_fun$Use_Counts > 0,] # missing: "feedR"            "GGIR"             "nparACT"          "PhysicalActivity" "smam"
matrix_fun_3 <- matrix_fun[matrix_fun$Use_Counts >= 10,]
theme1<-function() {theme(text = element_text(size=20),axis.text.x = element_text(angle=0, hjust=0),legend.position = "none")}
color.pallete<-brewer.pal(5,'Set2')
library(RColorBrewer)
color.pallete<-brewer.pal(5,'Set2')
ggplot(matrix_fun_2,aes(x=Use_Counts, y=Good_Exc, col=documentation)) +
geom_point(aes(size=3)) +
xlab('Package Use Count') + ylab("Good or Excellent Rating") +
geom_label_repel(label=matrix_fun_2$package, segment.size=1,force=1,segment.alpha=.25,hjust=0,box.padding=0.4,min.segment.length=.25,size=5) + theme_classic() + theme1() + scale_fill_manual(values=color.pallete)
color.pallete
color.pallete<-brewer.pal(3,'Set2')
ggplot(matrix_fun_2,aes(x=Use_Counts, y=Good_Exc, col=documentation)) +
geom_point(aes(size=3)) +
xlab('Package Use Count') + ylab("Good or Excellent Rating") +
geom_label_repel(label=matrix_fun_2$package, segment.size=1,force=1,segment.alpha=.25,hjust=0,box.padding=0.4,min.segment.length=.25,size=5) + theme_classic() + theme1() + scale_fill_manual(values=color.pallete)
ggplot(matrix_fun_2,aes(x=Use_Counts, y=Good_Exc, col=documentation)) +
geom_point(aes(size=3)) +
xlab('Package Use Count') + ylab("Good or Excellent Rating") +
geom_label_repel(label=matrix_fun_2$package, segment.size=1,force=1,segment.alpha=.25,hjust=0,box.padding=0.4,min.segment.length=.25,size=5) + theme_classic() + theme1() + scale_fill_discrete(values=color.pallete)
ggplot(matrix_fun_2,aes(x=Use_Counts, y=Good_Exc, col=documentation)) +
geom_point(aes(size=3)) +
xlab('Package Use Count') + ylab("Good or Excellent Rating") +
geom_label_repel(label=matrix_fun_2$package, segment.size=1,force=1,segment.alpha=.25,hjust=0,box.padding=0.4,min.segment.length=.25,size=5) + theme_classic() + theme1() + scale_fill_manual(values=color.pallete)
knitr::opts_chunk$set(echo = TRUE,fig.width=16, fig.height=10)
library(tidyverse)
library(ggplot2)
library(ggrepel)
library(RColorBrewer)
setwd('/home/matt/Dropbox/mablab/Rocio/MovementReview')
matrix_all <- read.csv("Survey_Processed.csv")
names(matrix_all) <- c("package",names(matrix_all)[2:ncol(matrix_all)])
funciones <- read.csv("packages_newlist_20180830_help.csv")
matrix_fun <- left_join(matrix_all,funciones)
matrix_fun <- matrix_fun[!is.na(matrix_fun$Number_Functions),]
matrix_fun$documentation <- c("Manual")
matrix_fun$documentation[matrix_fun$Vignettes == "Yes" & matrix_fun$Others == "No"] <- c("Manual+Vignette")
matrix_fun$documentation[matrix_fun$Vignettes == "Yes" & matrix_fun$Others == "Yes"] <- c("Manual+Vignette+Extra")
# discarding the packages we did not get users from:
matrix_fun_2 <- matrix_fun[matrix_fun$Use_Counts > 0,] # missing: "feedR"            "GGIR"             "nparACT"          "PhysicalActivity" "smam"
matrix_fun_3 <- matrix_fun[matrix_fun$Use_Counts >= 10,]
theme1<-function() {theme(text = element_text(size=20),axis.text.x = element_text(angle=0, hjust=0),legend.position = "none")}
I tried to set these up with a consistent style that reads well. I did not consider other ways to plot these, but believe there is something missing in the plots. Most of the plots end up very empty like they need to convey a little more information. A third dimension is definitely needed, however, package documentaiton doesn't always seem to be the most relevant 3rd dimension. I'm open to any ideas on what useful third dimensions would be or more visually appealing ways of conveying the information.
The ggrepel function adds two important functionalities adding text boxes and repeling labels from each other. In the first example I created text boxes and without, I can't decide which one I like more, but everyone of these can easily be changed to text boxes by changing geom_text_repel to geom_label_repel. Repeling function has many options but only so much. You can't manually tweak each individual line, so there is some limitation to what is possible. Keep that in mind.
### Rating vs Package Use
color.pallete<-brewer.pal(3,'Set2')
ggplot(matrix_fun_2,aes(x=Use_Counts, y=Good_Exc, col=documentation)) +
geom_point(aes(size=3)) +
xlab('Package Use Count') + ylab("Good or Excellent Rating") +
geom_label_repel(label=matrix_fun_2$package, segment.size=1,force=1,segment.alpha=.25,hjust=0,box.padding=0.4,min.segment.length=.25,size=5) + theme_classic() + theme1() + scale_fill_manual(values=color.pallete)
brewer.pal(3,'Set2')
ggplot(matrix_fun_2,aes(x=Use_Counts, y=Good_Exc, col=documentation)) +
geom_point(aes(size=3)) +
xlab('Package Use Count') + ylab("Good or Excellent Rating") +
geom_label_repel(label=matrix_fun_2$package, segment.size=1,force=1,segment.alpha=.25,hjust=0,box.padding=0.4,min.segment.length=.25,size=5) +
theme_classic() + theme1() +
scale_colour_brewer(palette= "Set2")
ggplot(matrix_fun_2,aes(x=Use_Counts, y=Good_Exc, col=documentation)) +
geom_point(aes(size=3)) +
xlab('Package Use Count') + ylab("Good or Excellent Rating") +
geom_label_repel(label=matrix_fun_2$package, segment.size=1,force=1,segment.alpha=.25,hjust=0,box.padding=0.4,min.segment.length=.25,size=5) +
theme_classic() + theme1() +
sacle_fill_discrete(color.pallete)
ggplot(matrix_fun_2,aes(x=Use_Counts, y=Good_Exc, col=documentation)) +
geom_point(aes(size=3)) +
xlab('Package Use Count') + ylab("Good or Excellent Rating") +
geom_label_repel(label=matrix_fun_2$package, segment.size=1,force=1,segment.alpha=.25,hjust=0,box.padding=0.4,min.segment.length=.25,size=5) +
theme_classic() + theme1() +
scale_fill_discrete(color.pallete)
ggplot(matrix_fun_2,aes(x=Use_Counts, y=Good_Exc, col=documentation)) +
geom_point(aes(size=3)) +
xlab('Package Use Count') + ylab("Good or Excellent Rating") +
geom_label_repel(label=matrix_fun_2$package, segment.size=1,force=1,segment.alpha=.25,hjust=0,box.padding=0.4,min.segment.length=.25,size=5) +
theme_classic() + theme1() +
scale_colour_manual(color.pallete)
ggplot(matrix_fun_2,aes(x=Use_Counts, y=Good_Exc, col=documentation)) +
geom_point(aes(size=3)) +
xlab('Package Use Count') + ylab("Good or Excellent Rating") +
geom_label_repel(label=matrix_fun_2$package, segment.size=1,force=1,segment.alpha=.25,hjust=0,box.padding=0.4,min.segment.length=.25,size=5) +
theme_classic() + theme1() +
scale_colour_manual(values=color.pallete)
color.pallete<-brewer.pal(3,'Set1')
ggplot(matrix_fun_2,aes(x=Use_Counts, y=Good_Exc, col=documentation)) +
geom_point(aes(size=3)) +
xlab('Package Use Count') + ylab("Good or Excellent Rating") +
geom_label_repel(label=matrix_fun_2$package, segment.size=1,force=1,segment.alpha=.25,hjust=0,box.padding=0.4,min.segment.length=.25,size=5) +
theme_classic() + theme1() +
scale_colour_manual(values=color.pallete)
color.pallete<-brewer.pal(3,'Dark2')
ggplot(matrix_fun_2,aes(x=Use_Counts, y=Good_Exc, col=documentation)) +
geom_point(aes(size=3)) +
xlab('Package Use Count') + ylab("Good or Excellent Rating") +
geom_label_repel(label=matrix_fun_2$package, segment.size=1,force=1,segment.alpha=.25,hjust=0,box.padding=0.4,min.segment.length=.25,size=5) +
theme_classic() + theme1() +
scale_colour_manual(values=color.pallete)
color.pallete<-brewer.pal(3,'Set2')
ggplot(matrix_fun_2,aes(x=Use_Counts, y=Good_Exc, col=documentation)) +
geom_point(aes(size=3)) +
xlab('Package Use Count') + ylab("Good or Excellent Rating") +
geom_label_repel(label=matrix_fun_2$package, segment.size=1,force=1,segment.alpha=.25,hjust=0,box.padding=0.4,min.segment.length=.25,size=5) +
theme_classic() + theme1() +
scale_colour_manual(values=color.pallete)
color.pallete<-brewer.pal(3,'Set2')
ggplot(matrix_fun_2,aes(x=Use_Counts, y=Good_Exc, col=documentation)) +
geom_point(size=3) +
geom_text_repel(label=matrix_fun_2$package,segment.size=1,force=1,segment.alpha=.25,hjust=0,box.padding=0.5,min.segment.length=.25,size=5) +
xlab('Package Use Count') + ylab("Good or Excellent Rating")+
theme_classic() + theme1()+
scale_colour_manual(values=color.pallete)
plot1<-ggplot(matrix_fun_2,aes(x=Use_Counts, y=Good_Exc, col=documentation)) +
geom_point(size=3) +
geom_text_repel(label=matrix_fun_2$package,segment.size=1,force=1,segment.alpha=.25,hjust=0,box.padding=0.5,min.segment.length=.25,size=5) +
xlab('Package Use Count') + ylab("Good or Excellent Rating")+
theme_classic() + theme1()+
scale_colour_manual(values=color.pallete)
View(funciones)
#
# Changing colors on Rating versus package use graph
knitr::opts_chunk$set(echo = TRUE,fig.width=16, fig.height=10)
library(tidyverse)
library(ggplot2)
library(ggrepel)
library(RColorBrewer)
setwd('/home/matt/Dropbox/mablab/Rocio/MovementReview')
matrix_all <- read.csv("Survey_Processed.csv")
names(matrix_all) <- c("package",names(matrix_all)[2:ncol(matrix_all)])
funciones <- read.csv("packages_newlist_20180830_help.csv")
matrix_fun <- left_join(matrix_all,funciones)
matrix_fun <- matrix_fun[!is.na(matrix_fun$Number_Functions),]
matrix_fun$documentation <- c("Manual")
matrix_fun$documentation[matrix_fun$Vignettes == "Yes" & matrix_fun$Others == "No"] <- c("Manual+Vignette")
matrix_fun$documentation[matrix_fun$Vignettes == "Yes" & matrix_fun$Others == "Yes"] <- c("Manual+Vignette+Extra")
# discarding the packages we did not get users from:
matrix_fun_2 <- matrix_fun[matrix_fun$Use_Counts > 0,] # missing: "feedR"            "GGIR"             "nparACT"          "PhysicalActivity" "smam"
matrix_fun_3 <- matrix_fun[matrix_fun$Use_Counts >= 10,]
theme1<-function() {theme(text = element_text(size=20),axis.text.x = element_text(angle=0, hjust=0),legend.position = "none")}
I tried to set these up with a consistent style that reads well. I did not consider other ways to plot these, but believe there is something missing in the plots. Most of the plots end up very empty like they need to convey a little more information. A third dimension is definitely needed, however, package documentaiton doesn't always seem to be the most relevant 3rd dimension. I'm open to any ideas on what useful third dimensions would be or more visually appealing ways of conveying the information.
The ggrepel function adds two important functionalities adding text boxes and repeling labels from each other. In the first example I created text boxes and without, I can't decide which one I like more, but everyone of these can easily be changed to text boxes by changing geom_text_repel to geom_label_repel. Repeling function has many options but only so much. You can't manually tweak each individual line, so there is some limitation to what is possible. Keep that in mind.
### Rating vs Package Use
color.pallete<-brewer.pal(3,'Dark2')
plot1<-ggplot(matrix_fun_2,aes(x=Use_Counts, y=Good_Exc, col=documentation)) +
geom_point(size=3) +
geom_text_repel(label=matrix_fun_2$package,segment.size=1,force=1,segment.alpha=.25,hjust=0,box.padding=0.5,min.segment.length=.25,size=5) +
xlab('Package Use Count') + ylab("Good or Excellent Rating")+
theme_classic() + theme1()+
scale_colour_manual(values=color.pallete)
plot1
ggsave('Rating_V_Use.png',plot=plot1, width=1400, height=800)
COL2 <- col2rgb(color.pallete)
COL2 <- COL2/2  # you can use of course other values than 2. Higher values the darker the output.
COL2 <- rgb(t(COL2), maxColorValue=255)
color.pallete <- rgb(t(COL2), maxColorValue=255)
color.pallete<-brewer.pal(3,'Dark2')
COL2 <- col2rgb(color.pallete)
COL2 <- COL2/2  # you can use of course other values than 2. Higher values the darker the output.
color.pallete <- rgb(t(COL2), maxColorValue=255)
plot1<-ggplot(matrix_fun_2,aes(x=Use_Counts, y=Good_Exc, col=documentation)) +
geom_point(size=3) +
geom_text_repel(label=matrix_fun_2$package,segment.size=1,force=1,segment.alpha=.25,hjust=0,box.padding=0.5,min.segment.length=.25,size=5) +
xlab('Package Use Count') + ylab("Good or Excellent Rating")+
theme_classic() + theme1()+
scale_colour_manual(values=color.pallete)
plot1
ggsave('Rating_V_Use.png',plot=plot1, width=1400, height=800)
plot1
ggsave('Rating_V_Use.png',plot=plot1, width=1400, height=800)
ggsave('Rating_V_Use.png',plot=plot1, width=1400, height=800,units='mm')
ggsave('Rating_V_Use.png',plot=plot1, width=140, height=80,units='mm')
ggsave('Rating_V_Use.png',plot=plot1, width=14, height=8,units='mm')
ggsave('Rating_V_Use.png',plot=plot1, width=14, height=8,units='cm')
ggsave('Rating_V_Use.png',plot=plot1, width=1.4, height=0.8,units='in')
1.4/8
14/8
ggsave('Rating_V_Use.png',plot=plot1, width=14, height=8,units='in')
color.pallete<-brewer.pal(3,'Dark2')
COL2 <- col2rgb(color.pallete)
COL2 <- COL2/1.5  # you can use of course other values than 2. Higher values the darker the output.
color.pallete <- rgb(t(COL2), maxColorValue=255)
plot1<-ggplot(matrix_fun_2,aes(x=Use_Counts, y=Good_Exc, col=documentation)) +
geom_point(size=3) +
geom_text_repel(label=matrix_fun_2$package,segment.size=1,force=1,segment.alpha=.25,hjust=0,box.padding=0.5,min.segment.length=.25,size=5) +
xlab('Package Use Count') + ylab("Good or Excellent Rating")+
theme_classic() + theme1()+
scale_colour_manual(values=color.pallete)
plot1
ggsave('Rating_V_Use.png',plot=plot1, width=14, height=8,units='in')
8/14
ggsave('Rating_V_Use.png',plot=plot1, width=16, height=16*(0.57),units='in')
color.pallete<-brewer.pal(3,'Dark2')
COL2 <- col2rgb(color.pallete)
COL2 <- COL2/1.25  # you can use of course other values than 2. Higher values the darker the output.
color.pallete <- rgb(t(COL2), maxColorValue=255)
plot1<-ggplot(matrix_fun_2,aes(x=Use_Counts, y=Good_Exc, col=documentation)) +
geom_point(size=3) +
geom_text_repel(label=matrix_fun_2$package,segment.size=1,force=1,segment.alpha=.25,hjust=0,box.padding=0.5,min.segment.length=.25,size=5) +
xlab('Package Use Count') + ylab("Good or Excellent Rating")+
theme_classic() + theme1()+
scale_colour_manual(values=color.pallete)
plot1
ggsave('Rating_V_Use.png',plot=plot1, width=16, height=16*(0.57),units='in')
plot1<-ggplot(matrix_fun_2,aes(x=Use_Counts, y=Good_Exc, col=documentation)) +
geom_point(size=3) +
geom_text_repel(label=matrix_fun_2$package,segment.size=1,force=1,segment.alpha=.4,hjust=0,box.padding=0.5,min.segment.length=.25,size=5) +
xlab('Package Use Count') + ylab("Good or Excellent Rating")+
theme_classic() + theme1()+
scale_colour_manual(values=color.pallete)
plot1
plot1<-ggplot(matrix_fun_2,aes(x=Use_Counts, y=Good_Exc, col=documentation)) +
geom_point(size=3) +
geom_text_repel(label=matrix_fun_2$package,segment.size=1,force=1,segment.alpha=.4,hjust=0,box.padding=0.4,min.segment.length=.25,size=5) +
xlab('Package Use Count') + ylab("Good or Excellent Rating")+
theme_classic() + theme1()+
scale_colour_manual(values=color.pallete)
16/8
ggsave('Rating_V_Use1.png',plot=plot1, width=16, height=16*(0.5),units='in')
ggsave('Rating_V_Use1.png',plot=plot1, width=14, height=16*(0.5),units='in')
plot1<-ggplot(matrix_fun_2,aes(x=Use_Counts, y=Good_Exc, col=documentation)) +
geom_point(size=3) +
geom_text_repel(label=matrix_fun_2$package,segment.size=1,force=1,segment.alpha=.4,hjust=0,box.padding=0.4,min.segment.length=.25,size=4) +
xlab('Package Use Count') + ylab("Good or Excellent Rating")+
theme_classic() + theme1()+
scale_colour_manual(values=color.pallete)
plot1
---
# Author of the news:
author: "Rocío Joo and Matthew E. Boone"
# Date of the news (a post with a future date will only be posted
# after the date):
date: "2019-02-05"
# Change the following date if there's a later update:
lastmode: "2019-02-06"
# Content with `draft: true` will not be published:
draft: false
# Title of the news:
title: "Survey on the R tracking packages: part I"
# Tags for the post (e.g. `["raccoons", "field"]`):
tags: ["R", "packages", "survey", "movement ecology", "trajectory", "tracks", "rocio", "matt"]
# Optionally, a summary (see below for more details):
summary: "In this post you'll find the complete results of our survey about R packages for movement analysis and tracking data processing."
# Turn to true if you want to include math equations:
math: true
# Optional featured image (relative to `static/img/` folder):
#header:
#  image: ""
#  caption: ""
---
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE, cache = TRUE, fig.width=16, fig.height=10)
library(tidyverse)
library(ggplot2)
library(ggrepel)
library(dplyr)
library(reshape)
library(RColorBrewer)
library(kableExtra)
# setwd('~/r_programs/RmovementPaperRep/SurveyPosts')
#path_data <- "r-move-survey-1_files/data/"
path_data <- "../../static/post/r-move-survey-1_files/data/"
data <- read.csv(paste0(path_data,"survey_responses_20190130.csv"),stringsAsFactors = FALSE)
data_all <- data %>%
filter(completion == 100)
packages <- read_csv(paste0(path_data,'packages_survey_names.csv'))
data_question_1 <- data_all[,grep("q1", colnames(data_all))]
colnames(data_question_1) <- t(packages)
# I'm dropping trajr that was added in the end and only got 1 response
data_question_1 <- data_question_1[,-grep("trajr",colnames(data_question_1))]
Total <- sapply(1:dim(data_question_1)[1],function(x){
sum(as.numeric(data_question_1[x,]!="Never"))
})
discard_rows <- which(Total == 0)
data_all <- data_all[-discard_rows,]
```
<!-- ## A large amount of R packages for movement and the need for a survey -->
In [the previous post](/post/r-move-review-summary), we introduced the pre-print of our review of R packages for movement. R is one of the most used programming softwares to process, visualize and analyze data from tracking devices. The large amount of existing packages makes it difficult to keep track of the spectrum of choices. Our review aimed at an objective introduction to the packages organized by the type of processing or analyzing they focused on, and to provide feedback to developers from a user perspective. For the second objective, we elaborated a survey for package users regarding:
1. How popular those packages are;
2. How well documented they are;
3. How relevant they are for users.
<!-- Those were the three questions that we asked about the packages, plus one about the level as an R user of the survey participant. We will go to the details of each question later in this post.  -->
In the review we showed results regarding package documentation. In this post you'll find the complete results of the survey.
## Packages included in the survey
In theory, any package could be potentially useful for movement analysis; either a time series package, a spatial analysis one or even `ggplot2` to make more beautiful graphics! For the [review](https://arxiv.org/abs/1901.05935), we considered only what we referred to as tracking packages. Tracking packages were those created to either analyze tracking data (i.e. $(x,y,t)$) or to transform data from tagging devices into proper tracking data. For instance, a package that would use accelerometer, gyroscope and magnetometer data to reconstruct an animal's trajectory via path integration, thus transforming those data into an $(x,y,t)$ format, would fit into the definition. But a package analyzing accelerometry series to detect changes in behavior would not fit.
For this survey, we added packages that, though not analyzing tracking data, were created to process or analyze data extracted from tracking devices in other formats (e.g. `accelerometry` for accelerometry data, `diveMove` for time-depth recorders or `pathtrackr` for video tracking data). A couple of packages that, were finally discarded from the review because of either being in early stages of development (`movement`) or because of being archived in CRAN due to unfixed problems (`sigloc`), were included in the survey.
<!-- For this survey, we considered only packages created with the main purpose of 1) processing or analyzing data obtained from devices used to track organisms, or 2) analyze tracking data in general. Tracking data would have space and time components, i.e. at least (x,y,t), or assuming t as a general index in regular steps.  -->
A total of 72 packages were included in this survey: `acc`, `accelerometry`, `adehabitatHR`, `adehabitatHS`, `adehabitatLT`, `amt`, `animalTrack`, `anipaths`, `argosfilter`, `argosTrack`, `BayesianAnimalTracker`, `BBMM`, `bcpa`, `bsam`, `caribou`, `crawl`, `ctmcmove`, `ctmm`, `diveMove`, `drtracker`, `EMbC`, `feedR`, `FLightR`, `GeoLight`, `GGIR`, `hab`, `HMMoce`, `Kftrack`, `m2b`, `marcher`, `migrateR`, `mkde`, `momentuHMM`, `move`, `moveHMM`, `movement`, `movementAnalysis`, `moveNT`, `moveVis`, `moveWindSpeed`, `nparACT`, `pathtrackr`, `pawacc`, `PhysicalActivity`, `probgls`, `rbl`, `recurse`, `rhr`, `rpostgisLT`, `rsMove`, `SDLfilter`, `SGAT/TripEstimation`, `sigloc`, `SimilarityMeasures`, `SiMRiv`, `smam`, `SwimR`, `T-LoCoH`, `telemetr`, `trackdem`, `trackeR`, `Trackit`, `TrackReconstruction`, `TrajDataMining`, `trajectories`, `trip`, `TwGeos`/`BAStag`, `TwilightFree`, `Ukfsst`/`kfsst`, `VTrack` and `wildlifeDI`.
Packages from any public repository (e.g. CRAN, GitHub, R-forge) were included in the survey. Packages created for eye, computer-mouse or fishing vessel movement were not considered here (but you are welcome to make your own survey about them!).
Note: `trajr` was added to the survey in a late stage, but because of that, and the fact that it got only one response, we filtered it out of the analysis.
## Participation in the survey
The survey was designed to be completely anonymous, meaning that we had no way to know who participated and not even the date of participation was saved. There was no previous selection of the participants and no probabilistic sampling was involved. The survey was advertised by Twitter, mailing lists (r-sig-geo and r-sig-ecology), individual emails to researchers and the [mablab website](https://mablab.org).
The survey got exemption from the Institutional Review Board at
University of Florida (IRB02 Office, Box 112250, University of Florida, Gainesville, FL 32611-2250).
A total of `r data %>% filter(!is.na(completion)) %>% nrow()` people participated in the survey, and `r data %>% filter(completion==100) %>% nrow()` answered all four questions. To answer all questions the participant had to have tried at least one of the packages. In the following sections, we analyze only completed surveys.
## The questions
### User level
Let's see first the level of use in R of the participants. The options were:
* Beginner: You only use existing packages and occasionally write some lines of code.
* Intermediate: You use existing packages but you also write and optimize your own functions.
* Advanced: You commonly use version control or contribute to develop packages.
```{r user-experience, echo=FALSE, message=F, fig.width=14, fig.height=10, fig.cap="Level of R use"}
#knitr::opts_chunk$set(echo = TRUE,fig.width=16, fig.height=8)
### 4. R user
## data_question <- data_all[,grep("q4", colnames(data_all))]
## categories <- c("Beginner","Intermediate","Advanced")
## data_question <- factor(unlist(lapply(strsplit(data_question,'\\:'),'[[',1)),levels=categories)
## use_counts <- as.numeric(table(data_question))
## prop <- round(as.numeric(prop.table(table(data_question)))*100,1)
data_question_4 <- data_all[,grep("q4", colnames(data_all))]
categories <- c("Beginner","Intermediate","Advanced")
data_question_4 <- factor(unlist(lapply(strsplit(data_question_4,'\\:'),'[[',1)),levels=categories)
use_counts <- as.numeric(table(data_question_4))
prop <- round(as.numeric(prop.table(table(data_question_4)))*100,1)
use_counts<-data.frame(levels=categories,total=use_counts)
use_counts$levels <- factor(as.character(use_counts$levels),levels=categories)
ggplot(data=use_counts,aes(x=levels,y=total)) + geom_bar(stat="identity", position=position_dodge()) +
geom_text(aes(label=total), size=6.0, vjust=1.5, hjust=1.2, color="white",
position = position_dodge(0.9)) +  theme_classic() +
theme(axis.text.y = element_text( hjust = 1,vjust=0.5),
axis.title =element_text(size=24),
axis.text =element_text(size=15))
```
<!---[caption comments](/raccoons/img/2019-01-13_skull-dentition_S.jpg
#"caption hover over")<span class="image-caption">caption comments</span>
-->
Most participants considered themselves in an intermediate level (`r prop[2]` %), meaning that they could write functions in R. Some others were beginners (`r prop[1]` %) and advanced (`r prop[3]` %) R users.
### Package use
The first question about package use was: How often do you use each of these packages? (Never, Rarely, Sometimes, Often)
The bar graphics below show that most packages were unknown (or at least had never been used) by the survey participants. The `adehabitat` packages (HR, LT and HS) were the most used packages. These packages provide a collection of tools to estimate home range, perform simple trajectory analysis and analyze habitat selection, respectively. On the bottom of the graphic, `smam` (for animal movement models), `PhysicalActivity`, `nparACT`, `GGIR` (these three for accelerometry data on human patients) and `feedr` (to handle radio telemetry data) had no users among the participants. For that reason, those 5 packages will not appear in the analysis of the next questions.
```{r relevance, echo=FALSE, message=F, fig.width=16, fig.height=15, fig.cap="Package use"}
data_question <- data_all[,grep("q1", colnames(data_all))]
colnames(data_question) <- t(packages)
# I'm dropping trajr that was added in the end and only got 1 response
data_question <- data_question[,-grep("trajr",colnames(data_question))]
packages_new <- packages[-which(packages=="trajr"),]
categories <- c("Never","Rarely","Sometimes","Often")
use_counts <- t(sapply(1:ncol(data_question),function(x){
data_line <- factor(data_question[,x],levels=categories)
count_p_use <- as.numeric(table(data_line))
return(count_p_use)
}))
use_counts<-data.frame(use_counts)
colnames(use_counts) <- categories
rownames(use_counts) <- t(packages_new)
use_counts$package<-row.names(use_counts)
df1<-melt(use_counts,id.vars='package',variable_name='response')
g<-unlist(by(df1, df1$package, function(x) sum(x$value[x$response!='Never'])))
df1$package<-factor(df1$package,levels=names(sort(g,decreasing=F)))
color.pallete<-brewer.pal(5,'YlGnBu')
color.pallete[1]<-'lightgray'
ggplot(data=df1) + geom_col(aes(x=package, y=value,fill=response)) + ylab('count') +coord_flip() + scale_fill_manual(values=color.pallete) + theme_classic()+
theme(axis.text.y = element_text( hjust = 1,vjust=0.5),
axis.title =element_text(size=24),
axis.text =element_text(size=15),
legend.text=element_text(size=16),
legend.title=element_blank())
library(tidyverse)
library(ggplot2)
library(ggrepel)
library(dplyr)
library(reshape)
library(RColorBrewer)
library(kableExtra)
# setwd('~/r_programs/RmovementPaperRep/SurveyPosts')
#path_data <- "r-move-survey-1_files/data/"
path_data <- "../../static/post/r-move-survey-1_files/data/"
# setwd('~/r_programs/RmovementPaperRep/SurveyPosts')
path_data <- "r-move-survey-1_files/data/"
#path_data <- "../../static/post/r-move-survey-1_files/data/"
data <- read.csv(paste0(path_data,"survey_responses_20190130.csv"),stringsAsFactors = FALSE)
data_all <- data %>%
filter(completion == 100)
setwd('~/r_programs/RmovementPaperRep/SurveyPosts')
path_data <- "r-move-survey-1_files/data/"
#path_data <- "../../static/post/r-move-survey-1_files/data/"
data <- read.csv(paste0(path_data,"survey_responses_20190130.csv"),stringsAsFactors = FALSE)
data_all <- data %>%
filter(completion == 100)
setwd('~/r_programs/RmovementPaperRep/SurveyPosts')
path_data <- "r-move-survey-1_files/data/"
#path_data <- "../../static/post/r-move-survey-1_files/data/"
data <- read.csv(paste0(path_data,"survey_responses_20190130.csv"),stringsAsFactors = FALSE)
setwd('~/r_programs/RmovementPaperRep/SurveyPosts')
setwd('~/r_programs/RmovementPaperRep/SurveyPosts')
path_data <- "r-move-survey-1_files/data/"
#path_data <- "../../static/post/r-move-survey-1_files/data/"
data <- read.csv(paste0(path_data,"survey_responses_20190130.csv"),stringsAsFactors = FALSE)
